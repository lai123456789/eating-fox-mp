
<template>
  <view class="order-ctner container-same">
    <wxs src="../../../utils/filter.wxs" module="tools"></wxs>
    <view class="msg-top">
      <view class="msg-1">
        <view class="one">
          <image src="/images/icon_daiqu.png"></image>
          <text>代取书</text>
        </view>
      </view>
    </view>

    <view class="order-con-outer">
        <view class="order-goods-outer">
            <image src="/images/location_a.png"></image>
          <view class="bottom-two">
            <view class="two-1">
              <view><text>{{goodsList.buyerName}}  <text>{{goodsList.buyerPhone}}</text></text></view>
            </view>
            <view class="two-2">
              {{goodsList.buyerAddress}}
            </view>
          </view>
        </view>
<!--      <view class="img1">-->
<!--        <image src="../../../images/finish.png" wx:if="{{goodsList.status == 1}}"></image>-->
<!--        <image src="../../../images/cancleOrder.png" wx:if="{{goodsList.status == 2}}"></image>-->
<!--        <image src="../../../images/time.png" wx:if="{{goodsList.status == 0}}"></image>-->
<!--      </view>-->
<!--      <view  style="color: #F2F0F3;line-height: 35rpx;">{{goodsList.statusDesc}}</view>-->
<!--      <view class="text-btn" wx:for="{{goodsList.operations}}" wx:for-item="btnItem">-->
<!--        <view-->
<!--          catchtap="orderBtnA({{btnItem}}, {{goodsList}})">-->
<!--          {{btnItem.desc}}-->
<!--        </view>-->
<!--      </view>-->
      </view>
    <view class="order-status-order">
      <text>我的商品</text>
      <text>共4件 </text>
    </view>
    <view class="cat-item-ctner" wx:for="{{goodsList.childInfos}}">
      <view class="goods-outer" wx:for="{{item.detailInfos}}" wx:key='index' wx:for-item="subItem">
        <view class='cat-m'>
          <image src='{{subItem.goodsIco}}' />
        </view>
        <view class="cat-m-t">
          <view class='goods-name'>
            {{subItem.goodsName}}
          </view>
          <view class='goods-des'>
            <text style="color: #FF7F00;font-weight: bold">￥{{subItem.price}}
            </text>
          </view>
        </view>
      </view>
      <view class="order-button-outer"  wx:for="{{item.operations}}" wx:key='index' wx:for-item="btnItem">
        <view  catchtap="orderBtnB({{btnItem}},{{item}})" class="order-btnSure" >{{btnItem.desc}}</view>
      </view>

    </view>

    <view class="cat-item-bottom">
      <view class="bottom-two">
        <view class="two-1" style="margin-bottom: 15rpx">
          <view>商品总价：</view>
          <view>¥{{goodsList.totalMoney}}</view>
        </view>
        <view class="two-1" wx:if="{{goodsList.deductType}}">
          <block wx:if="{{goodsList.deductType == 1}}">
            <view >使用积分数：</view>
            <view>{{goodsList.deductQuantity}}</view>
          </block>
          <block wx:if="{{goodsList.deductType == 2}}">
            <view >使用余额：</view>
            <view>¥{{goodsList.deductQuantity/100}}</view>
          </block>
        </view>
        <view class="two-1" wx:if="{{goodsList.deductType}}">
          <view wx:if="{{goodsList.deductType == 1}}">狐币抵扣：</view>
          <view>-¥{{goodsList.deductAmount}}</view>
        </view>
        <view class="two-1">
          <view>狐币抵扣：</view>
          <view>-¥{{goodsList.freight}}</view>
        </view>
      </view>
    </view>
    <view class="cat-item-bottom">
      <view class="bottom-one">
        <view><text>支付金额： </text><text>¥248</text></view>
        <view><text>订单编号： </text><text>{{goodsList.orderMasterNo}}</text></view>
        <view><text>下单时间： </text><text>{{goodsList.createTime}}</text></view>
        <view><text>支付方式： </text><text>{{goodsList.payTypeDesc}}</text></view>
        <view wx:if="{{goodsList.payNo}}"><text>支付单号： </text><text>{{goodsList.payNo}}</text></view>
        <view wx:if="{{goodsList.payTime}}"><text>支付时间： </text><text>{{goodsList.payTime}}</text></view>
      </view>
      <view class="bottom-end">
        <view>
          <text>付款金额：¥</text>
          <text>{{payAmount}}</text>
        </view>
      </view>
    </view>
    <view class="icx-btn-colorBg-whiteText">立即付款</view>
  </view>

</template>

<script>
  import wepy from 'wepy';
  import { apiGoodsLikePageF} from '../../../services/index/index'
  import {apiMyOrderInfoF} from  '../../../services/mine'
  import {
    apiOrderFindPageF,
    apiCancelOrderF, // 取消订单
    apiConfirmOrderF, // 确认收货
    apiRefundF, // 退款
    apiRemindDeliverGoodsF //提醒商家发货
  } from '../../../services/mine/index'
  import UrlNavigate from '../../../utils/wepyNavigate';
  import miniPro from '@/utils/wepy-pro.js';
  export default class Index extends wepy.page {
    config = {
      navigationBarBackgroundColor:'#FF7913',
      navigationBarTextStyle:'white',
      navigationBarTitleText: '我的订单详情'
    };
    components = {
    };
    mixins = [];
    data = {
      confirmOrderId: '',
      orderChildId:'',
      goodsList:{},
      TofixedMoney:"", //实付款金额
      payAmount:"",//实付款金额
      pageParamsLike: {
        page: 0,
        limit: 100
      }
    };

    methods = {
      orderBtnA(btnItem, item) {  //顶部头部btn状态
        if(btnItem.key == 1 && item.orderType == 1){ //立即支付  正常订单支付
          UrlNavigate('/pages/packageMine/sureOrder/index',{orderId:item.orderMasterId,prepareType:3});
        }
        if(btnItem.key == 1 && item.orderType == 4){ //立即支付  团购订单支付
          UrlNavigate('/pages/groupBuy/ConfirmOrder/index',{orderMasterId:item.orderMasterId});
        }
      },
      orderBtnB(btnItemB, itemB){  //商品内容操作 btn状态
        if (btnItemB.key == 6) {   //确认收货
          this.confirmOrderId = itemB.orderChildId
          this.apiConfirmOrderFA(this.apiConfirmOrderFA.bind(this))
        }else if(btnItemB.key == 4){//查看物流
          UrlNavigate('/pages/packageMine/logisticsInfo/index',{id:itemB.orderChildId});
        }else if(btnItemB.key == 2){ //评价
          UrlNavigate('/pages/packageMine/orderComment/index',{orderChildId:itemB.orderChildId});
        }else if(btnItemB.key == 5){ //提醒商家发货  已做
          this.orderChildId = itemB.orderChildId
          this.apiRemindDeliverGoodsFA(this.apiRemindDeliverGoodsFA.bind(this))
        }
      },
      toGoodsDetail(item) { //猜你喜欢商品详情
        miniPro.toGoodsDetail(item.id, item.groupPurchase)
      }
    };
    apiConfirmOrderFA(fun) {  //确认收货
      apiConfirmOrderF(this.confirmOrderId, fun).then((result) => {
        miniPro.showToast('确认收货成功')
        setTimeout(() => {
          wepy.redirectTo({ url: '/pages/packageMine/order/index' });
          this.$apply()
        }, 1000)
      }).catch((err) => {

      });
    }
    apiRemindDeliverGoodsFA(fun) {  //提醒商家发货  接口无实际用途逻辑  只是提醒用户而已
      let orderChildId = this.orderChildId
      apiRemindDeliverGoodsF(orderChildId, fun).then((result) => {
        miniPro.showToast('提醒商家发货成功')
        setTimeout(() => {
          wepy.redirectTo({ url: '/pages/packageMine/order/index' });
        }, 1000);
      }).catch((err) => {
      });
    }
    apiMyOrderInfo(fun) { //商品api信息
      let orderMasterId = this.orderMasterId
      let orderChildId = this.orderChildId
      if (!orderChildId){ //判别 待收货接口时的详情id 参数必须传orderChildId=
        orderChildId = ""
      }
      if (!orderMasterId){ //除了待收货接口其他的接口时的详情id 参数传orderMasterId=
        orderMasterId = ""
      }
      apiMyOrderInfoF(orderChildId,orderMasterId, fun).then((result) => {
        this.goodsList = result
        let money = this.goodsList.totalMoney + this.goodsList.freight - this.goodsList.integrationAmount
        this.TofixedMoney = money.toFixed(2)
        this.payAmount = result.payAmount
          this.$apply()
      }).catch((err) => {});
    }
    watch = {
    }
    events = {
    };

    onShareAppMessage(res) {
      let url = '/pages/groupBuy/OnekeyDelegation/index?shareId=' + this.shareInfo.shareParam;
      let title = this.shareInfo.title;
      let imageUrl = this.shareInfo.imageUrl;
      console.log('url',url)
      console.log('title',title)
      console.log('imageUrl',imageUrl)
      return {
        title: title,
        path: url,
        imageUrl: imageUrl
      }
    };

    onLoad(option){
      this.orderMasterId = option.id
      this.orderChildId = option.orderChildId
      this.apiMyOrderInfo(this.apiMyOrderInfo.bind(this))
    };

  }
</script>
<style lang="scss">
  @import './index.scss';
</style>
